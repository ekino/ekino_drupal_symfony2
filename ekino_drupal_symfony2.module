<?php

/*
 * This file is part of the Ekino Drupal package.
 *
 * (c) 2011 Ekino
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
if (PHP_SAPI === 'cli' && !defined('EKINO_DRUSH_FROM')) {
  ekino_drupal_symfony_start('drush');
}

/**
 * @param string $mode
 * @return void
 */
function ekino_drupal_symfony_start($mode)
{
  global $container, $conf;

  if (!$container && PHP_SAPI === 'cli' && $mode == 'drush') {
    if (!isset($conf['symfony2']['kernel_factory'])) {
      require_once sprintf('%s/%s/bootstrap.php.cache', $conf['symfony2']['root'], 'app');
      require_once sprintf('%s/%s/AppKernel.php', $conf['symfony2']['root'], 'app');

      $kernelName = 'AppKernel';
    } else {
      $kernelName = $conf['symfony2']['kernel_factory']($conf);
    }

    echo "[Symfony2] Booting Kernel ";

    $content = ob_get_flush();
    $kernel = new $kernelName($conf['symfony2'][$mode]['env'], $conf['symfony2'][$mode]['debug']);

    if (\PHP_VERSION_ID < 70000) {
      $kernel->loadClassCache();
    }

    $kernel->boot();

    echo " ... ok! \n";

    echo "[Symfony2] Loading container ";
    $container = $kernel->getContainer();

    echo " ... ok! \n";

    ob_start();
    echo $content;
  }
}
/**
 * @return \Symfony\Component\DependencyInjection\ContainerInterface
 */
function symfony_container()
{
  global $container;

  if (!$container) {
    throw new RuntimeException('No symfony container available');
  }

  return $container;
}

/**
 * @param $name
 * @return object
 */
function symfony_service($name)
{
  return symfony_container()->get($name);
}

require_once __DIR__.'/ekino_drupal_symfony2_event.inc';
require_once __DIR__.'/ekino_drupal_symfony2_user_hook.inc';
require_once __DIR__.'/ekino_drupal_symfony2_schema.inc';
